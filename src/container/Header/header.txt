import React from 'react'
import { motion } from 'framer-motion';

import { images } from '../../constants';
import { AppWrap } from '../../wrapper'

import './Header.scss';


const scaleVariants = {
    whileInView: {
        scale: [0, 1],
        opacity: [0, 1],
        transition: {
            duration: 1,
            ease: 'easeInOut'
        }
    }
}

const Header = () => {
    return (
        <div id='home' className="app__header app__flex">
            <motion.div
                whileInView={{x: [-100,0], opacity: [0,1]}}
                transition={{duration: 0.5}}
                className="app__header-info"
            >
                <div className="app__header-badge">
                    <div className="badge-cmp app__flex">
                        <span>ðŸ‘‹</span>
                        <div style={{marginLeft: 20}}>
                            <p className='p-text'>Hello, I am</p>
                            <h1 className="head-text">Karen</h1>
                        </div>
                    </div>

                    <div className="tag-cmp app__flex">
                        <p className='p-text'>Full Stack</p>
                        <p className='p-text'>Web Developer</p>
                    </div>
                </div>
            </motion.div>

            <motion.div
                whileInView={{opacity: [0,1]}}
                transition={{duration: 0.5, delayChildren: 0.5}}
                className="app__header-img"
            >
                <img src={images.profile} alt="profile_bg" />
                <motion.img
                    whileInView={{scale: [0,1]}}
                    transition={{duration: 1, ease: 'easeInOut'}}
                    src={images.circle}
                    alt="profile_circle"
                    className="overlay_circle"
                />
               
            </motion.div>

            <motion.div
                variants={scaleVariants}
                whileInView={scaleVariants.whileInView}
                className="app__header-cicles"
            >
                {[images.javascript, images.react, images.css].map((circle, index) => (
                    <div className='circle-cmp app__flex' key={`circle-${index}`}>
                        <img src={circle} alt="circle" />
                    </div>
                ))}
            </motion.div>
        </div>
    )
}

export default AppWrap(Header, 'home');


 {/*  <svg viewBox="0 0 200 200" 
                 xmlns="http://www.w3.org/2000/svg">
                    <path fill="#000000" d="M56,-61.3C66.4,-45.5,64.6,-22.8,62.9,-1.6C61.3,19.5,59.9,39,49.4,50.8C39,62.6,19.5,66.7,1.9,64.7C-15.6,62.8,-31.2,54.8,-46.1,43C-60.9,31.2,-75,15.6,-78.4,-3.4C-81.9,-22.5,-74.7,-45,-59.8,-60.7C-45,-76.5,-22.5,-85.5,0.1,-85.7C22.8,-85.8,45.5,-77.1,56,-61.3Z" transform="translate(100 100)" />
                    {/* <image x='12' href={images.Logo}/> */}
                </svg> */}


/* Header */
.app__header {
    flex: 1;
    width: 100%;
    height: 100%;
    flex-direction: row;

    padding: 6rem 2rem 0;

    @media screen and (min-width: 2000px) {
        padding-top: 8rem;
    }

    @media screen and (max-width: 1200px) {
        flex-direction: column;
    }

    @media screen and (max-width: 450px) {
        padding-top: 6rem 1rem 2rem;
    }
}

/* Text */
.app__header-info {
    flex: 0.65;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    height: 100%;

    @media screen and (max-width: 2000px) {
        width: 100%;
        margin-right: 0rem;
    }
} 

/* badge */
.app__header-badge {
    width: 100%;
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    flex-direction: column;
  
    .badge-cmp,
    .tag-cmp {
      padding: 1rem 2rem;
      background: var(--white-color);
      border-radius: 15px;
      flex-direction: row;
      width: auto;
  
      box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
    }
  
    .tag-cmp {
      flex-direction: column;
      margin-top: 3rem;
  
      p {
        width: 100%;
        text-transform: uppercase;
        text-align: right;
      }
    }
  
    span {
      font-size: 2.5rem;
  
      @media screen and (min-width: 2000px) {
        font-size: 5rem;
      }
    }
  
    @media screen and (max-width: 1200px) {
      justify-content: flex-start;
      align-items: flex-start;
    }
}

/* circles */
.app__header-cicles{
    flex: 0.75;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: flex-start;
    height: 100%;
    margin-left: 1rem 2rem;

    div {
        width: 100px;
        height: 100px;
        border-radius: 50%;

        background: var(--white-color);
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
    
        img {
            width: 60%;
            height: 60%;
        }

    }

    //circles with different height and width
    div:nth-child(1) {
        width: 100px;
        height: 100px;
    }

    div:nth-child(2) {
        margin: 1.75rem;
        width: 150px;
        height: 150px;
    }

    div:nth-child(3) {
        width: 70px;
        height: 70px;
    }

    @media screen and (min-width: 2000px) {
        div:nth-child(1) {
            width: 400px;
            height: 400px;
        }
    
        div:nth-child(2) {
            width: 170px;
            height: 170px;
        }
    
        div:nth-child(3) {
            width: 200px;
            height: 200px;
        }
    }

    @media screen and (max-width: 1200px) {
        width: 100%;
        flex-direction: row;
        flex-wrap: wrap;
        margin-left: 0;

        div {
            margin: 1rem;
        }
    }

    @media screen and (max-width: 500px) {
        div:nth-child(1) {
            width: 50px;
            height: 50px;
        }
    
        div:nth-child(2) {
            width: 80px;
            height: 80px;
        }
    
        div:nth-child(3) {
            width: 60px;
            height: 60px;
        }
    }

}

/* image */
.app__header-img {
    flex: 1;
    height: 20%;

    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    position: relative;

    img {
        width: 64%;
        object-fit: contain;
        z-index: 1;

        @media screen and (max-width: 900px) {
            width: 80%;
        }
        
        @media screen and (max-width: 500px) {
            width: 45%;
            position: absolute;
        }
    }

    .overlay_circle {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 0;
        width: 100%;
        height: 90%;
    }

    @media screen and (max-width: 1200px) {
        margin: 2rem 0rem;
        width: 100%;
    }
}